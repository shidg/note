# 安装homebrew
进入homebrew官网，复制安装命令

brew doctor
brew update

# install vim
brew install vim

# install cmake
brew install cmake

# install git
brew install git

# 开始安装YouCompleteMe
# 下载vim插件管理器
git clone https://github.com/gmarik/Vundle.vim.git ~/.vim/bundle/Vundle.vim

# 启用插件管理器(.vimrc)
call vundle#begin()
" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" All of your Plugins must be added before the following line
call vundle#end() " required

# 安装插件管理器
sudo  vim
:PluginInstall

# 使用插件管理器安装YCM(.vimrc)
# call vundle#begin() 和call vundle#end 之间添加
Bundle 'Valloric/YouCompleteMe'

# 下载YCM 过程较长
:BundleInstall

# 依赖项安装
cd ~/.vim/bundle/YouCompleteMe
sudo git submodule update --init --recursive
# tools.git无法直接从google下载，手动从github检出
cd ~/.vim/bundle/YouCompleteMe/third_party/ycmd/third_party/go/src/golang.org/x
git clone https://github.com/golang/tools.git

# 继续安装依赖
sudo git submodule update --init --recursive

# 自动补全配置
" YCM
"让Vim的补全菜单行为与一般IDE一致(参考VimTip1228)
set completeopt=longest,menu

"离开插入模式后自动关闭预览窗口
autocmd InsertLeave * if pumvisible() == 0|pclose|endif

"回车即选中当前项
inoremap <expr> <CR> pumvisible() ? "\<C-y>" : "\<CR>"

"上下左右键的行为 会显示其他信息
inoremap <expr> <Down> pumvisible() ? "\<C-n>" : "\<Down>"
inoremap <expr> <Up> pumvisible() ? "\<C-p>" : "\<Up>"
inoremap <expr> <PageDown> pumvisible() ? "\<PageDown>\<C-p>\<C-n>" : "\<PageDown>"
inoremap <expr> <PageUp> pumvisible() ? "\<PageUp>\<C-p>\<C-n>" : "\<PageUp>"

"关闭加载.ycm_extra_conf.py提示
let g:ycm_confirm_extra_conf=0

let g:ycm_global_ycm_extra_conf='~/.vim/bundle/YouCompleteMe/cpp/.ycm_extra_conf.py'

" 开启 YCM 基于标签引擎
let g:ycm_collect_identifiers_from_tags_files=1

" 从第2个键入字符就开始罗列匹配项
let g:ycm_min_num_of_chars_for_completion=2

" 禁止缓存匹配项,每次都重新生成匹配项
let g:ycm_cache_omnifunc=0

" 语法关键字补全
let g:ycm_seed_identifiers_with_syntax=1

"force recomile with syntastic
nnoremap <F5> :YcmForceCompileAndDiagnostics<CR>
"nnoremap <leader>lo :lopen<CR> "open locationlist
"nnoremap <leader>lc :lclose<CR> "close locationlist
inoremap <leader><leader> <C-x><C-o>

"在注释输入中也能补全
let g:ycm_complete_in_comments = 1

"在字符串输入中也能补全
let g:ycm_complete_in_strings = 1

"注释和字符串中的文字也会被收入补全
let g:ycm_collect_identifiers_from_comments_and_strings = 0

" 跳转到定义处
nnoremap <leader>jd :YcmCompleter GoToDefinitionElseDeclaration<CR>

# 自定义配置
cd ~/.vim/bundle/YouCompleteMe
mkdir cpp
cd cpp

# 创建.ycm_extra_conf.py文件，写入以下内容：
import os                                                                       
import ycm_core

flags = [
    '-Wall',
    '-Wextra',
    '-Werror',
    '-Wno-long-long',
    '-Wno-variadic-macros',
    '-fexceptions',
    '-DNDEBUG',
    '-std=c++11',
    '-x',
    'c++',
    '-I',
    '/usr/include',
    '-isystem',
    '/usr/lib/gcc/x86_64-linux-gnu/5/include',
    '-isystem',
    '/usr/include/x86_64-linux-gnu',
    '-isystem'
    '/usr/include/c++/5',
]

SOURCE_EXTENSIONS = [ '.cpp', '.cxx', '.cc', '.c' ]

def FlagsForFile( filename, **kwargs ):
    return {
    ¦   'flags': flags,
    ¦   'do_cache': True
    }

#加载自定义配置,在.vimrc中添加以下内容：
let g:ycm_global_ycm_extra_conf='~/.vim/bundle/YouCompleteMe/cpp/.ycm_extra_conf.py'

# End
