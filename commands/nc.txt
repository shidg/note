# netcat,网络工具中的瑞士军刀

# 命令1
nc -z -v -n 10.10.38.57 21-25
# 解释

可以运行在TCP或者UDP模式，默认是TCP，-u参数调整为udp.
z 参数告诉netcat使用0 IO,连接成功后立即关闭连接，不进行数据交换
v 参数指使用冗余选项(译者注：即详细输出)
n 参数告诉netcat 不要使用DNS反向查询IP地址的域名

这个命令会打印21到25所有开放的端口.
Banner是一个连接的服务发送回的文本信息.当试图鉴别漏洞或者服务的类型和版本的时候,Banner信息是非常有用的.但是，并不是所有的服务都会发送banner。一旦发现开放的端口,可以容易的使用netcat连接服务抓取他们的banner。

# 命令2
nc -v 172.31.100.7 21
netcat 命令会连接开放端口21并且打印运行在这个端口上服务的banner信息。

# 命令3
nc -l 2020
# 服务器模式，在本机的2020端口启动了一个tcp服务器（listen）

# 命令 4
nc 10.10.38.xx 2020
# 连接到nc服务器，这时候不管输入什么都会出现在服务端的屏幕上

# 命令5

#server 端：
nc -l 2020 < file.txt

#client 端
nc 10.10.38.xx 2020 > file1.txt

这里创建了一个服务器在A上并且重定向netcat的输入为文件file.txt，那么当任何成功连接到该端口，netcat会发送file的文件内容。
在客户端重定向输出到file1.txt，当B连接到A，A发送文件内容，B保存文件内容到file.txt.
也可以相反的方法使用,如下：

#server端
nc -l 2020 > file1.txt

# client端
nc 10.10.38.xx 2020 < file.txt

# 命令6
# Server
tar -cvf – dir_name | nc -l 1567
# Client
nc -n 172.31.100.7 1567 | tar -xvf -

这里在A服务器上，我们创建一个tar归档包并且通过-在控制台重定向它，然后使用管道，重定向给netcat，netcat可以通过网络发送它。
在客户端我们下载该压缩包通过netcat 管道然后打开文件。
如果想要节省带宽传输压缩包，我们可以使用bzip2或者其他工具压缩。

# server
tar -cvf – dir_name| bzip2 -z | nc -l 1567

#Client
nc -n 172.31.100.7 1567 | bzip2 -d |tar -xvf -


# 命令7

11. 指定源地址

假设你的机器有多个地址，希望明确指定使用哪个地址用于外部数据通讯。我们可以在netcat中使用-s选项指定ip地址。

#server
$nc -u -l 1567 < file.txt

#client
$nc -u 172.31.100.7 1567 -s 172.31.100.5 > file.txt
