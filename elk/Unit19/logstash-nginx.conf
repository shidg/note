#input {
#    beats {
#        port => 5044
#    }
#}

input {
  kafka {
    topics_pattern => "nginx-logs-json-.*"
    bootstrap_servers => "10.203.43.101:9092,10.203.43.102:9092,10.203.43.103:9092"
    auto_offset_reset => "earliest" 
    codec => json {
      charset => "UTF-8"
    }
    type => "json"
  }
  kafka {
    topics_pattern => "nginx-logs-text-.*"
    bootstrap_servers => "10.203.43.101:9092,10.203.43.102:9092,10.203.43.103:9092"
    auto_offset_reset => "earliest" 
    codec => json {
      charset => "UTF-8"
    }
    type => "text"
  }
}


filter {
  if [type] == "text" {
    grok {
      #match => { "message" => "%{IPORHOST:remote_ip} - %{DATA:user_name} \[%{HTTPDATE:local_time}\] \"%{WORD:method} %{DATA:url} HTTP/%{NUMBER:http_version}\" %{NUMBER:response_code} %{NUMBER:body_sent:bytes} \"%{DATA:referrer}\" \"%{DATA:user_agent}\" \"%{NUMBER:request_time}\"  \"%{DATA:http_x_forwarded_for}\" %{IPORHOST:http_host} " }
      patterns_dir => ["/etc/logstash/patterns"]
      match => { "message" => "%{NGINXACCESS}" }
      remove_field => "message"
    }

    date {
      match => ["local_time", "dd/MMM/yyyy:HH:mm:ss Z"]
      target => "@timestamp"
    }

    mutate {
      remove_field => "agent"
      remove_field => "ecs"
      remove_field => "log"
      remove_field => "host"
    }
  }
}

output {
  if [type] == "text" {
    elasticsearch {
      hosts => ["http://10.203.43.101:30920"]
      # 索引名称，不存在会自动创建
      index => "nginx-logs-text-%{+YYYY.MM.dd}"
    }
  }
  if [type] == "json" {
    elasticsearch {
      hosts => ["http://10.203.43.101:30920"]
      # 索引名称，不存在会自动创建
      index => "nginx-logs-json-%{+YYYY.MM.dd}"
    }
  }
}
