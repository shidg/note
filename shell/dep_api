#! /bin/bash
# dep_api

## sourcecode ##
# git@git.eg.com:devicecloud/device-api.git

## Dependencies ##
# git@git.eg.com:wzc3.0/common.git
# git@git.eg.com:devicecloud/device-manage.git

source ~/common.sh
trap EXIT_CONFIRMATION SIGINT
trap 'ERRTRAP $LINENO' ERR


CMD=`echo $(basename $0)`

if [ $# -lt 3 ];then
	echo -e "缺少参数!\nUsage: $CMD [branch number] [branch_name_common] [branch_name_dm]\nE.g: dep_api 3.0.2.1 3.0.1 3.0.2"
	exit
#elif ! [[ "$1" =~ ^[1-9]\.[0-9]\.[0-9][0-9]$ ]];then
#	echo -e "参数格式错误!"
#	exit
fi

set -u

#Define Variables
DEFINE_VARIABLES

#Define system path
DEFINE_SYSTEM_PATH

START_TIME=`date "+%Y%m%d-%T"`
BRANCH_NAME=$1
DEPEND_BRANCH_COMMON=$2
DEPEND_BRANCH_DM=$3
BUILD_DIR=/Data/war/api/${BRANCH_NAME}

#Create dir if not exist
[ ! -d ${BUILD_DIR} ] && mkdir -p ${BUILD_DIR}

# 解决依赖
echo -e "构建依赖: wzc3.0/common [branch: ${DEPEND_BRANCH_COMMON}] ..."
sleep 1

cd ${WZC3_SOURCE_DIR}/common
git pull && git checkout ${DEPEND_BRANCH_COMMON}
mvn clean install -Dmaven.test.skip=true

echo -e "构建依赖：deviceclound/device-manage [branch: ${DEPEND_BRANCH_DM}] ..."
sleep 1

cd ${DM_SOURCE_DIR}/device-manage-web/src/main/resources                                                                                                 
    if [ -f "dubbo.properties" ];then
        rm -f dubbo.properties
    fi  

    if [ -f "gateway-deliver-config.properties" ];then
        rm -f gateway-deliver-config.properties
    fi  

    if [ -f "serverconfig.properties" ];then
        rm -f serverconfig.properties
    fi  

cd ${DM_SOURCE_DIR}/device-manage-service/src/main/resources 
    if [ -f "hbase-site.xml" ];then
        rm -f hbase-site.xml
    fi  
git pull && git checkout ${DEPEND_BRANCH_DM}

cd ${DM_SOURCE_DIR}
mvn clean install -Dmaven.test.skip=true

# 更新代码
cd ${API_SOURCE_DIR}

# 删除上次部署的残留配置文件
if [ -f wzc-api/src/main/resources/logback-spring.xml ];then
    rm -f wzc-api/src/main/resources/logback-spring.xml
fi

# 切换分支，更新代码
if [ "$(git rev-parse --abbrev-ref HEAD)" == "${BRANCH_NAME}" ];then
    if eval NEW_COMMIT ${BRANCH_NAME};then
        git pull
    else
        eval EXIT_CONFIRMATION
    fi
else
    if git branch -vv | grep "${BRANCH_NAME}";then
        git checkout ${BRANCH_NAME}
        if eval NEW_COMMIT ${BRANCH_NAME};then
            git pull
        else
            eval EXIT_CONFIRMATION
        fi
    else
        git pull && git checkout ${BRANCH_NAME}
    fi
fi

# 记录提交信息
GET_CODE_VERSION

# 处理配置文件
if [ -f "wzc-api/src/main/resources/logback-spring.xml" ];then
    rm -f wzc-api/src/main/resources/logback-spring.xml
fi

UNALIAS_CP
cp wzc-api/src/main/resources/logback-spring.xml.template wzc-api/src/main/resources/logback-spring.xml

# 解决依赖
echo -e "构建依赖：deviceclound/device-api下的device-control-service ..."
sleep 1
cd ${API_SOURCE_DIR}/device-control-service
mvn clean install -Dmaven.test.skip=true

# 开始构建
echo -e "开始构建api包..."
sleep 1
cd ${API_SOURCE_DIR}/wzc-api
mvn clean package -Dmaven.test.skip=true

UNALIAS_CP

cp -f ${API_SOURCE_DIR}/wzc-api/target/*api-*.jar ${BUILD_DIR}

END_TIME=`date "+%Y%m%d-%T"`

cat >> /Data/logs/deplog/dep_api.log <<EOF
========================================
Rebuild api for success.

TIME: ${START_TIME}
Branch: ${BRANCH_NAME}
$GIT_MSG
EOF

exit 0

