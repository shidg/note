#! /bin/bash

# dep_gateway

## sourcecode ##
#git@git.eg.com:devicecloud/device-gateway.git

## Dependencies ##
# git@git.eg.com:wzc3.0/common.git
# git@git.eg.com:devicecloud/device-manage.git [device-deliver-api]

source ~/common.sh
trap EXIT_CONFIRMATION SIGINT
trap 'ERRTRAP $LINENO' ERR


CMD=`echo $(basename $0)`

if [ $# -lt 3 ];then
	echo -e "缺少参数!\nUsage: $CMD [branch name] [depend_branch_name]\nE.g: dep_gateway 3.0.1 1.0.22"
	exit
#elif ! [[ "$1" =~ ^[1-9]\.[0-9]\.[0-9][0-9]$ ]];then
#	echo -e "参数格式错误!"
#	exit
fi

set -u

#Define Variables
DEFINE_VARIABLES

#Define system path
DEFINE_SYSTEM_PATH

START_TIME=`date "+%Y%m%d-%T"`
BRANCH_NAME=$1
DEPEND_BRANCH_COMMON=$2
DEPEND_BRANCH_DELIVER=$3
BUILD_DIR1=/Data/war/gateway/device1.0/${BRANCH_NAME}
BUILD_DIR2=/Data/war/gateway/device2.0/${BRANCH_NAME}

#Create dir if not exist
[ ! -d ${BUILD_DIR1} ] && mkdir -p ${BUILD_DIR1}
[ ! -d ${BUILD_DIR2} ] && mkdir -p ${BUILD_DIR2}


#选择设备版本
GET_READY_FOR_GATEWAY

# 切换分支,更新代码
cd ${GATEWAY_SOURCE_DIR}

if [ "$(git rev-parse --abbrev-ref HEAD)" == "${BRANCH_NAME}" ];then 
    if NEW_COMMIT ${BRANCH_NAME};then
        git pull
    else
        eval EXIT_CONFIRMATION
    fi  
else
    if git branch -vv | grep "${BRANCH_NAME}";then
        git checkout ${BRANCH_NAME}
        if NEW_COMMIT ${BRANCH_NAME};then
            git pull
        else
            eval EXIT_CONFIRMATION
        fi  
    else
        git pull && git checkout ${BRANCH_NAME}
    fi  
fi

# 记录代码提交信息
GET_CODE_VERSION

# 解决依赖
echo -e "构建依赖: wzc3.0/common [branch: ${DEPEND_BRANCH_COMMON}]..."
sleep 1
cd ${WZC3_SOURCE_DIR}/common
git pull && git checkout ${DEPEND_BRANCH_COMMON}
if NEW_COMMIT ${DEPEND_BRANCH_COMMON};then
    git pull
fi
mvn clean install -Dmaven.test.skip=true


echo -e "构建依赖：devicecloud/device-manage/device-deliver-api [branch: ${DEPEND_BRANCH_DELIVER}]..."
sleep 1
cd ${DM_SOURCE_DIR}
if [ -f "device-manage-web/src/main/resources/dubbo.properties" ];then
    rm -f device-manage-web/src/main/resources/dubbo.properties
fi
if [ -f "device-manage-web/src/main/resources/gateway-deliver-config.properties" ];then
    rm -f device-manage-web/src/main/resources/gateway-deliver-config.properties
fi

if [ -f "device-manage-web/src/main/resources/serverconfig.properties" ];then
    rm -f device-manage-web/src/main/resources/serverconfig.properties
fi

if [ -f "device-manage-service/src/main/resources/hbase-site.xml" ];then
    rm -f device-manage-service/src/main/resources/hbase-site.xml
fi

git pull && git checkout ${DEPEND_BRANCH_DELIVER}
if NEW_COMMIT ${DEPEND_BRANCH_DELIVER};then
    git pull
fi
cd device-deliver-api
mvn clean install -Dmaven.test.skip=true

# 开始构建
cd ${GATEWAY_SOURCE_DIR}
mvn clean package -Dmaven.test.skip=true

UNALIAS_CP

if [ "${DEVICE_ENV}" == "1.0" ];then
    cp -f ${GATEWAY_SOURCE_DIR}/wzc1.0/target/*.jar ${BUILD_DIR1}
elif [ "${DEVICE_ENV}" == "2.0" ];then
    cp ${GATEWAY_SOURCE_DIR}/wzc2.0/target/*.jar ${BUILD_DIR2}
fi

END_TIME=`date "+%Y%m%d-%T"`

cat >> /Data/logs/deplog/dep_gateway.log <<EOF
========================================
Rebuild gateway for [${DEVICE_ENV}] success.
TIME: ${START_TIME}
Branch: ${BRANCH_NAME}
$GIT_MSG
EOF

exit 0

